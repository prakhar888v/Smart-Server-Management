PROCEDURE "SAP_SRVMGR"."SRVMANAGER::sql_get_allscheduleddocs" ( IN refdate timestamp )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
 AS
BEGIN
DECLARE i INTEGER;
    declare varStartDateinDB timestamp;
    declare varEndDateinDB timestamp;
    declare varDateTime timestamp;
    declare varSeconds integer;
    declare startTimeDiff integer;
    declare endTimeDiff integer;
    declare actualTimeDiff integer;
    
    DECLARE CURSOR cur FOR SELECT * FROM (select * from SAP_SRVMGR."SRVMON_SCHDATA" where "RecurrenceType" = 'Hourly' 
        and seconds_between(TO_SECONDDATE(TO_DATE("StartTime")),TO_SECONDDATE(TO_DATE(:refdate))) >= 0 
        and seconds_between(TO_SECONDDATE(TO_DATE("Expiry")),TO_SECONDDATE(TO_DATE(:refdate))) <= 0);
    delete from SAP_SRVMGR."SCHGROUPEDDATA";
    -- Hourly schedules
    open cur;

        FOR r1 AS cur DO

            varStartDateinDB = r1."StartTime";
            varEndDateinDB = r1."Expiry";
            -- SELECT MINUTE(varStartDateinDB) "min" into varSeconds from dummy;
            -- varSeconds = varSeconds * 60;
            SELECT  ADD_SECONDS(ADD_SECONDS(ADD_SECONDS((:refdate),SECOND(r1."StartTime")),MINUTE(r1."StartTime") * 60) ,
            HOUR(r1."StartTime")*60*60) "startDateTime" into varDateTime from dummy;

            for i in HOUR(varDateTime)..23 do
                               
                SELECT seconds_between(varStartDateinDB,varDateTime) into startTimeDiff from dummy;
                SELECT seconds_between(varEndDateinDB,varDateTime) into endTimeDiff from dummy;

                if (startTimeDiff >= 0 and endTimeDiff <= 0 ) then

                    insert into SAP_SRVMGR."SCHGROUPEDDATA" values (r1."NumOfDocuments", varDateTime);
                end if;

                SELECT ADD_SECONDS(varDateTime,3600) "startDateTime" into varDateTime from dummy;
            end for;
        END FOR;
    close cur;
    
    -- Daily schedules
    insert into SAP_SRVMGR."SCHGROUPEDDATA" select "NumOfDocuments",
        ADD_SECONDS(ADD_SECONDS(ADD_SECONDS((:refdate),SECOND("StartTime")),MINUTE("StartTime") * 60) ,HOUR("StartTime")*60*60) 
        as "ScheduledTime" from SAP_SRVMGR."SRVMON_SCHDATA" 
        where seconds_between(TO_SECONDDATE(TO_DATE("StartTime")),TO_SECONDDATE(TO_DATE(:refdate))) >= 0 
        and seconds_between(TO_SECONDDATE(TO_DATE("Expiry")),TO_SECONDDATE(TO_DATE(:refdate))) <= 0 and "RecurrenceType" = 'Daily';
    -- Weekly schedules      
    insert into SAP_SRVMGR."SCHGROUPEDDATA" select "NumOfDocuments",
        ADD_SECONDS(ADD_SECONDS(ADD_SECONDS((:refdate),SECOND("StartTime")),MINUTE("StartTime") * 60) ,HOUR("StartTime")*60*60)
        as "ScheduledTime" from SAP_SRVMGR."SRVMON_SCHDATA" 
        where seconds_between(TO_SECONDDATE(TO_DATE("StartTime")),TO_SECONDDATE(TO_DATE(:refdate))) >= 0 
        and seconds_between(TO_SECONDDATE(TO_DATE("Expiry")),TO_SECONDDATE(TO_DATE(:refdate))) <= 0
            and (MOD(days_between(TO_SECONDDATE(TO_DATE("StartTime")),TO_SECONDDATE(TO_DATE(:refdate))),7) = 0) and "RecurrenceType" = 'Weekly';
    --Once/Now schedules
    insert into SAP_SRVMGR."SCHGROUPEDDATA" select "NumOfDocuments","StartTime" from SAP_SRVMGR."SRVMON_SCHDATA" 
        where TO_DATE("StartTime") = TO_DATE(:refdate) and ("Status" = 'Now' or "Status" = 'Once');
        
    select SUM("NUMOFDOCUMENTS") as "NumOfDocuments","SCHEDULEDTIME" as "ScheduledTime" from SAP_SRVMGR."SCHGROUPEDDATA" group by "SCHEDULEDTIME" ;
   
END